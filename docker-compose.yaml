services:
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning 
    #volumes: 
    # - cache:/data
  redis-commander:
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:0.8.1
    restart: always
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8081:8081"
  mongo:
    image: mongo:4.2.24
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express:0.54.0
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
  caddy:
    image: caddy:2.9.1-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    network_mode: host
  dex:
    image: ghcr.io/dexidp/dex:v2.31.1
    ports:
      - 5556:5556
    volumes:
      - ./dex-config.yaml:/etc/dex/cfg/config.yaml:z
    command: ["dex", "serve", "/etc/dex/cfg/config.yaml"]
    network_mode: host
  oauth2-proxy:
    restart: always
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.9.0
    ports:
      - "4180:4180"
    volumes:
      - ./oauth2-proxy.cfg:/etc/oauth2-proxy.cfg
    command: ["oauth2-proxy", "--config", "/etc/oauth2-proxy.cfg"]
    network_mode: host
volumes:
  cache:
    driver: local
